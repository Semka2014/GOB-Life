#Используется библиотека NCalc
#Возможно создание функций. Пример:
#func sigmoid 1 / (1 + Exp(-x)) x
#
#Для всех формул доступны следующие константы
#energy - энергия бота
#predation - чем больше, тем бот менее хищный
#mutation - колличество мутаций
#time - текущий шаг симуляции
#dnal - длина днк бота
#x - положение бота по оси абсцисс
#y - положение бота по оси ординат
#wigth - ширина поля
#height - высота поля
#random - случайное число от 0 до 1000
#В некоторых формулах доступны некоторые дополнительные переменные (с.м. под формулами)

#Вы можете редактировать формулы, менять их местами, создавать функции, менять и переименовывать функции и писать комментарии.
#Вы НЕ можете менять переименовывать, удалять и создавать новые формулы, если это не отражено в основном коде программы.

#Если вы используете неочевидные подходы для расчёта, к примеру учитываете координаты бота, то рекомендуется это прокоментировать.


#Пассивное изменение энергии
pasEn -1

#Энергия в трупе
deadEn 10

#Энергия в трупе от суицида
sdeadEn energy

#Энергия от фотосинтеза
photoEn 2

#Энергия в ребёнке
childEn 5

#Изменение энергии при бесполом размножении
dupEn -2

#Изменение энергии у обоих родителей при половом размножении
sexP1En -1
sexP2En -1
#Дополнительные переменные: energy2 - энергия второго родителя, dnal2 - длина днк второго родителя

#Изменение энергии при повороте в одну и в другую стороны
rot1En 0
rot2En 0

#Изменение энергии при перемещении
walkEn 0

#Сколько энергии полчать от съедания трупа
fEatEn fenergy
#Дополнительные переменные: fenergy - энергия в трупе

#Атака
#Сколько забирать энергии (если в жертве меньше энергии, то хищник получит всю энергии жертвы)
stealEn energy2 / 2
#Дополнительные переменные: energy2 - энергия жертвы

#Сколько получать энергии
getstealedEn stealedEn
#Дополнительные переменные: stealedEn - колличество энергии, которое забрали у жертвы, energy2 - энергия жертвы


#Если для чего-либо будет недостаточно энергии, то действие будет выполнено, но бот будет обречён на смерть в следующем шаге.